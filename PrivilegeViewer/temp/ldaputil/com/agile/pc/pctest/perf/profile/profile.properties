; used to assign ids to Methods
sequence_startValue = 0

; used to distinguish between different runs
scenarioId = 0

; class that will publish output
publisher_class = com.agile.pc.pctest.perf.profile.XMLPublisher
publish_file = d:/temp/profile.xml
xsl_file = D:/Agile9311release/OAS/config/agileDomain/instr_classes/com/agile/pc/pctest/perf/profile/profile.xsl

; how many levels deep should the profiler track
max_profile_level = 20

; class to use for doing class and method filtering
selector_class = com.agile.pc.pctest.perf.profile.ClassFilter

; classes that will be byteCode engineered, in Perl5 format
includePattern = com\\.agile\\S*|oracle\\.jdbc\\.driver\\.Oracle\\S*Statement

; classes that will be excluded from byteCode engineering, in Perl5 format
; a class is engineered if it matches the include pattern & doesn't match the exclude pattern
excludePattern=com\\.agile\\.pc\\.pctest\\.perf\\.profile\\S*|com\\.agile\\.admin\\.server\\S*|\
	\\S*Exception|\\*Message|com\\.agile\\.common\\.\\S*|com\\.agile\\.pc\\.common\\.value\\.\\S*|\
	com\\.agile\\.pc\\.common\\.CMWarning|\
	com\\.agile\\.ui\\.web\\.(?!action\\.ActionServlet)\\S*|\com\\.agile\\.pc\\.cmserver\\.base\\.BaseRow|\
	com\\.agile\\.pc\\.cmrmi\\S*|com\\.agile\\.\\pc\\.cmserver\\.base\\S*|com\\.agile\\.ui\\.pcm\\.common\\.view\\.ObjectViewFactory

; For a method, the Filter will try to find the most specific inclusion & exclusion patterns
; For eg, for the entries:
; methodIncludePattern = \\S*
; methodExcludePattern = toString|hashCode
; com.agile.admin.rmi.IDName.methodExcludePattern="<init>"
;the exclusion pattern for com.agile.admin.rmi.IDName.methodExcludePattern is "<init>"
; the inclusion pattern is \\S*, so all methods accept the constructors are profiled
; if we add the entry:
; com.agile.admin.methodExcludePattern=setValue
; then for all classes in com.agile.admin the 'setValue' method will not be profiled.
; The IDName class will still use its more specific exclusion Pattern

; methods to include
methodIncludePattern = \\S*

oracle.jdbc.driver.OracleStatement.methodIncludePattern=\\<init\\>|execute\\S*|close
oracle.jdbc.driver.OraclePreparedStatement.methodIncludePattern=\\<init\\>|execute\\S*|set\\S*
oracle.jdbc.driver.OracleCallableStatement.methodIncludePattern=\\<init\\>|execute\\S*|set\\S*


; methods to exclude
methodExcludePattern = toString|hashCode

; define package/class specific method level patterns
com.agile.admin.rmi.IDName.methodExcludePattern=\\<init\\>|toString|hashCode|get.*|set.*

oracle.jdbc.driver.OraclePreparedStatement.methodExcludePattern=setObject|setItem|setDatum
oracle.jdbc.driver.OracleCallableStatement.methodExcludePattern=setObject|setItem|setDatum

; suffix to use for variables in profiling code
nameSuffix = _agile

profile_input_dir = D:/Agile9311release/OAS/config/agileDomain/lib/classes12.zip;D:/Agile9311release/OAS/config/agileDomain/classes
profile_output_dir = D:/Agile9311release/OAS/config/agileDomain/instr_classes